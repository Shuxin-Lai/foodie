{
  "name": "v1.0.3",
  "desc": "\n/* --------------- 修改表 --------------- */\nusers[用户表]\n    修改字段：\n    \tsex[性别]\n",
  "date": 1669392231497,
  "data": {
    "name": "foodie",
    "describe": "foodie",
    "avatar": "",
    "version": "4.2.0",
    "createdTime": "2022-11-20 20:45:08",
    "updatedTime": "2022-11-26 00:03:47",
    "dbConns": [],
    "profile": {
      "default": {
        "db": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
        "dbConn": "D4843C6A-F7EC-480D-A8DB-4F6655F65F92",
        "entityInitFields": [
          {
            "defKey": "TENANT_ID",
            "defName": "租户号",
            "comment": "",
            "type": "",
            "len": 32,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
            "refDict": "",
            "uiHint": "",
            "id": "ADB3AD14-6603-43E2-8261-114E32442B5B"
          },
          {
            "defKey": "REVISION",
            "defName": "乐观锁",
            "comment": "",
            "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
            "type": "",
            "len": 32,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "92BF430E-01FA-4AEF-944F-25A142632654"
          },
          {
            "defKey": "CREATED_BY",
            "defName": "创建人",
            "comment": "",
            "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
            "type": "",
            "len": 32,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "C8BE2C7A-8251-4ADD-BB4F-411C5754DA62"
          },
          {
            "defKey": "CREATED_TIME",
            "defName": "创建时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "4E471FD6-3E73-4A90-B660-51598A482409"
          },
          {
            "defKey": "UPDATED_BY",
            "defName": "更新人",
            "comment": "",
            "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
            "type": "",
            "len": 32,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "0DC24AA9-4CD0-45D8-95CF-FA546BE343AB"
          },
          {
            "defKey": "UPDATED_TIME",
            "defName": "更新时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "09F64AC4-4DEE-428F-AF64-4C103884E1AC"
          }
        ],
        "entityInitProperties": {
          "partitioned by": "(date string)",
          "row format delimited": "",
          "fields terminated by ','": "",
          "collection items terminated by '-'": "",
          "map keys terminated by ':'": "",
          "store as textfile;": ""
        }
      },
      "javaHome": "",
      "sql": {
        "delimiter": ""
      },
      "dataTypeSupports": [
        {
          "defKey": "MYSQL",
          "id": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E"
        },
        {
          "defKey": "ORACLE",
          "id": "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542"
        },
        {
          "defKey": "SQLServer",
          "id": "BFC87171-C74F-494A-B7C2-76B9C55FACC9"
        },
        {
          "defKey": "PostgreSQL",
          "id": "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022"
        },
        {
          "defKey": "DB2",
          "id": "89504F5D-94BF-4C9E-8B2E-44F37305FED5"
        },
        {
          "defKey": "DM",
          "id": "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307"
        },
        {
          "defKey": "GaussDB",
          "id": "592C7013-143D-4E7B-AF64-0D7BF1E28230"
        },
        {
          "defKey": "Kingbase",
          "id": "77BD85E5-9D0D-4096-8427-CBA306FC9C6A"
        },
        {
          "defKey": "MaxCompute",
          "id": "11D1FB71-A587-4217-89BA-611B8A1F83E0"
        },
        {
          "defKey": "SQLite",
          "id": "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1"
        },
        {
          "defKey": "JAVA",
          "id": "797A1496-D649-4261-89B4-544132EC3F36"
        },
        {
          "defKey": "JavaMybatis",
          "id": "895CFD1D-4273-4D32-A2C4-CAC70200AB5B"
        },
        {
          "defKey": "JavaMybatisPlus",
          "id": "A2EE7B4A-CE62-4290-B00C-B26C1BF18073"
        },
        {
          "defKey": "C#",
          "id": "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30"
        },
        {
          "defKey": "Hive",
          "id": "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2"
        },
        {
          "defKey": "Golang",
          "id": "B91D99E0-9B7C-416C-8737-B760957DAF09"
        },
        {
          "defKey": "Rust",
          "id": "BDF457FD-9F98-4AC3-A705-7587B00A3BAB"
        }
      ],
      "codeTemplates": [
        {
          "type": "appCode",
          "applyFor": "797A1496-D649-4261-89B4-544132EC3F36",
          " JpaBean": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@Table(name=\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    {{? field.primaryKey }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
        },
        {
          "type": "appCode",
          "applyFor": "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30",
          "Default": "using System;\nusing System.Collections.Generic;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n}}\n/*\n * @author : http://www.chiner.com.cn\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace PDManer.Application\n{\n    public partial class {{=it.func.camel(it.entity.defKey,true) }}\n    {\n    \n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}} { get; set; }\n        $blankline\n        {{~}}\n        \n    }\n}",
          "SqlSugar": "using System;\nusing System.Collections.Generic;\nusing SqlSugar;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    var sqlSugartable='[SugarTable(\"{{=it.entity.defKey}}\", TableDescription = \"{{=it.func.join(it.entity.defName,it.entity.comment,';')}}\")]';\n}}\n/*\n * @author : xkdong@163.com\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace Model.DBModel\n{\n    /// <summary>\n    /// {{=it.func.join(it.entity.defName,it.entity.comment,';')}}\n    /// </summary>\n    {{=sqlSugartable}}\n    public class {{=it.entity.defKey}}\n    {\n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        {{? field.primaryKey }}\n        [SugarColumn(IsIdentity = true, IsPrimaryKey = true)]\n        {{?}}\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}}{ get; set; }\n        $blankline\n        {{~}}\n    }\n}"
        },
        {
          "applyFor": "895CFD1D-4273-4D32-A2C4-CAC70200AB5B",
          "type": "appCode",
          "Controller": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<Page<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        return ResponseEntity.ok({{=serviceVarName}}.paginQuery({{=beanVarName}}, pageRequest));\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}",
          "Service": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}",
          "ServiceImpl": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.queryById({{=pkVarName}});\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        long total = {{=mapperName}}.count({{=beanVarName}});\n        return new PageImpl<>({{=mapperName}}.queryAllByLimit({{=beanVarName}}, pageRequest), pageRequest, total);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.update({{=beanVarName}});\n        return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}",
          "Mapper": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\nimport java.util.List;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.data.domain.Pageable;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询指定行数据\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @param pageable 分页对象\n     * @return 对象列表\n     */\n    List<{{=beanClass}}> queryAllByLimit({{=beanClass}} {{=beanVarName}}, @Param(\"pageable\") Pageable pageable);\n\n    /** \n     * 统计总行数\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @return 总行数\n     */\n    long count({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int insert({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 批量新增数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 批量新增或按主键更新数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertOrUpdateBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 影响行数\n     */\n    int deleteById({{=pkDataType}} {{=pkVarName}});\n}",
          "Mapper.xml": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n    <resultMap type=\"{{=pkgName}}.entity.{{=beanClass}}\" id=\"{{=beanClass}}Map\">\n    {{~it.entity.fields:field:index}}\n        <result property=\"{{=it.func.camel(field.defKey,false)}}\" column=\"{{=field.defKey}}\" jdbcType=\"{{=field.dbType}}\"/>\n    {{~}}\n    </resultMap>\n    $blankline\n    <!-- 通过ID查询单条数据 -->\n    <select id=\"queryById\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </select>\n    $blankline\n    <!--分页查询指定行数据-->\n    <select id=\"queryAllByLimit\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n        limit #{pageable.offset}, #{pageable.pageSize}\n    </select>\n    $blankline\n    <!--统计总行数-->\n    <select id=\"count\" resultType=\"java.lang.Long\">\n        select count(1)\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n    </select>\n    $blankline\n    <!--新增数据-->\n    <insert id=\"insert\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values ({{=it.entity.fields.map(function(e,i){return '#{'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n    </insert>\n    $blankline\n    <!-- 批量新增数据 -->\n    <insert id=\"insertBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n    </insert>\n    $blankline\n    <!-- 批量新增或按主键更新数据 -->\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n        on duplicate key update\n        {{=it.entity.fields.map(function(e,i){return e.defKey + '=values('+e.defKey+')'}).join(',\\n\\t\\t')}}\n    </insert>\n    $blankline\n    <!-- 更新数据 -->\n    <update id=\"update\">\n        update {{=it.entity.defKey}}\n        <set>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}},\n            </if>\n        {{~}}\n        </set>\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </update>\n    $blankline\n    <!--通过主键删除-->\n    <delete id=\"deleteById\">\n        delete from {{=it.entity.defKey}} where {{=pkField}} = #{{{=pkVarName}}}\n    </delete>\n</mapper>\n\n",
          "Entity": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
        },
        {
          "applyFor": "A2EE7B4A-CE62-4290-B00C-B26C1BF18073",
          "type": "appCode",
          "Controller": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport java.util.List;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<PageImpl<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        //1.分页参数\n        long current = pageRequest.getPageNumber();\n        long size = pageRequest.getPageSize();\n\n        //2.分页查询\n        /*把Mybatis的分页对象做封装转换，MP的分页对象上有一些SQL敏感信息，还是通过spring的分页模型来封装数据吧*/\n        com.baomidou.mybatisplus.extension.plugins.pagination.Page<{{=beanClass}}> pageResult = {{=serviceVarName}}.paginQuery({{=beanVarName}}, current,size);\n\n        //3. 分页结果组装\n        List<{{=beanClass}}> dataList = pageResult.getRecords();\n        long total = pageResult.getTotal();\n        PageImpl<{{=beanClass}}> retPage = new PageImpl<{{=beanClass}}>(dataList,pageRequest,total);\n        return ResponseEntity.ok(retPage);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}",
          "Service": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}",
          "ServiceImpl": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkFieldKey = \"UNDEFINED\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkFieldKey = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport cn.hutool.core.util.StrUtil;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.conditions.update.LambdaUpdateChainWrapper;\n\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.selectById({{=pkVarName}});\n    }\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size){\n        //1. 构建动态查询条件\n        LambdaQueryWrapper<{{=beanClass}}> queryWrapper = new LambdaQueryWrapper<>();\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            queryWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n\n        //2. 执行分页查询\n        Page<{{=beanClass}}> pagin = new Page<>(current , size , true);\n        IPage<{{=beanClass}}> selectResult = {{=mapperName}}.selectByPage(pagin , queryWrapper);\n        pagin.setPages(selectResult.getPages());\n        pagin.setTotal(selectResult.getTotal());\n        pagin.setRecords(selectResult.getRecords());\n\n        //3. 返回结果\n        return pagin;\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        //1. 根据条件动态更新\n        LambdaUpdateChainWrapper<{{=beanClass}}> chainWrapper = new LambdaUpdateChainWrapper<{{=beanClass}}>({{=mapperName}});\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            chainWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n        //2. 设置主键，并更新\n        chainWrapper.set({{=beanClass}}::get{{=pkVarNameU}}, {{=beanVarName}}.get{{=pkVarNameU}}());\n        boolean ret = chainWrapper.update();\n        //3. 更新成功了，查询最最对象返回\n        if(ret){\n            return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n        }else{\n            return {{=beanVarName}};\n        }\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}",
          "Mapper": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\n\nimport com.baomidou.mybatisplus.core.conditions.Wrapper;\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.core.toolkit.Constants;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper  extends BaseMapper<{{=beanClass}}>{\n    /** \n     * 分页查询指定行数据\n     *\n     * @param page 分页参数\n     * @param wrapper 动态查询条件\n     * @return 分页对象列表\n     */\n    IPage<{{=beanClass}}> selectByPage(IPage<{{=beanClass}}> page , @Param(Constants.WRAPPER) Wrapper<{{=beanClass}}> wrapper);\n}",
          "Mapper.xml": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n$blankline\n\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n     <select id=\"selectByPage\" resultType=\"{{=pkgName}}.entity.{{=beanClass}}\">\n        select * from user ${ew.customSqlSegment}\n    </select>\n</mapper>\n\n",
          "Entity": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@TableName(\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    {{? field.primaryKey }}\n    @TableId\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
        },
        {
          "applyFor": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
          "type": "dbDDL",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    `{{=field.defKey}}` {{=field.dbType}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT = '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
          "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX IF EXISTS {{=index.defKey}} ;\n{{~}}",
          "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}\n",
          "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('ALTER TABLE '+before.defKey+' RENAME TO '+after.defKey);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldAdded) { \n            let ddlItem = 'ADD COLUMN `'+field.defKey+'` '+field.dbType;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            if(field.autoIncrement){\n                ddlItem += ' AUTO_INCREMENT';\n            }\n            if(field.defaultValue){\n                ddlItem += (' DEFAULT ' + field.defaultValue);\n            }\n            ddlItem += (' COMMENT \\''+field.defName+';'+field.comment+'\\'');\n            \n            if(field.index>0 && field.afterFieldKey){\n                ddlItem += (' AFTER '+field.afterFieldKey);\n            }\n            ret.push(ddlItem);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldRemoved) { \n            ret.push('DROP '+field.defKey);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' MODIFY COLUMN `'+after.defKey+'`');\n            }else{\n                changeDDL += (' CHANGE COLUMN `'+before.defKey+'` `'+after.defKey+'`');\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            let defaultValue = '';\n            if(after.defaultValue != null && after.defaultValue.length>0){\n                defaultValue = (after.defaultValue);\n            }else{\n                defaultValue = 'NULL';\n            }\n            if(defaultValue != 'NULL'){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n\n            let comment = after.defName;\n            if(after.comment){\n                comment = comment + ';' + (after.comment||'');\n            }\n            if(comment){\n                changeDDL += (' COMMENT \\''+comment+'\\';');\n            }\n            \n            ret.push(firstDDL+' '+changeDDL);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
        },
        {
          "applyFor": "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542",
          "type": "dbDDL",
          "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
          "deleteTable": "DROP TABLE {{=it.entity.defKey}};",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
          "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* -------------------------------------------------- */\n创建表：\n{{~ createEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* -------------------------------------------------- */\n删除表：\n{{~ dropEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* -------------------------------------------------- */\n修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n    {{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n    {{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}\n    {{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('\\n\\t建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('\\n\\t解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}\n{{=indexChanged?'\\n\\t更改了索引':''}}\n{{=changed?'\\n\\t更改了属性':''}}\n{{=relaArray.length>0?relaArray.join(''):''}}\n{{~}}\n{{?}}",
          "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD (${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ddlItem += ')';\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            changeDDL += ('MODIFY ('+after.defKey+'');\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            changeDDL += ')';\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
        },
        {
          "applyFor": "BFC87171-C74F-494A-B7C2-76B9C55FACC9",
          "type": "dbDDL",
          "createTable": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];\n\nCREATE TABLE [dbo].[{{=it.entity.defKey}}](\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' IDENTITY(1,1)' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}EXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, null, null;{{?}}\n{{~it.entity.fields:field:index}}\nEXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(field.defName,field.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, 'column', {{=field.defKey}};\n{{~}}\n",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
          "deleteTable": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "deleteIndex": "",
          "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}",
          "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`EXEC sp_rename '${before.defKey}','${after.defKey}'`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `IF ((SELECT COUNT(*) FROM ::fn_listextendedproperty('MS_Description','SCHEMA', 'dbo','TABLE', '${after.defKey}', NULL, NULL)) > 0)\n            \\n\\tEXEC sp_updateextendedproperty 'MS_Description', '${commentText}','SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            \\nELSE\n            \\n\\tEXEC sp_addextendedproperty 'MS_Description', '${commentText}', 'SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            `;\n            ret.push(myText);\n            /*ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');*/\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD [${field.defKey}] ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `EXEC sp_addextendedproperty 'MS_Description', N'${commentText}','SCHEMA', N'dbo','TABLE', N'${entity.data.baseInfo.defKey}','COLUMN', N'${field.defKey}'`;\n                ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN [${field.defKey}]`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' ALTER COLUMN ['+after.defKey+']');\n            }else{\n                let renameText = `EXEC sp_rename '[dbo].[${entity.data.baseInfo.defKey}].[${before.defKey}]','${after.defKey}','COLUMN';`;\n                ret.push(renameText);\n                continue;\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
        },
        {
          "applyFor": "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022",
          "type": "dbDDL",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{? field.autoIncrement}}SERIAL{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
          "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
          "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}",
          "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD COLUMN ${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }            \n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            if(before.dbType !== after.dbType || before.len !== after.len || before.scale !== after.scale){\n                let dbTypeDDL = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${after.defKey} TYPE ${before.dbType}`;\n                if(after.len>0){\n                    dbTypeDDL += ('('+after.len);\n                    if(parseInt(after.scale)>0){\n                        dbTypeDDL += (','+after.scale);\n                    }\n                    dbTypeDDL += ')';\n                }\n                ret.push(dbTypeDDL+';');\n            }\n            \n            if(before.defaultValue !== after.defaultValue){\n                let defaultDDL = '';\n                let defaultValue = after.defaultValue;\n                defaultValue = (defaultValue==null)?\"NULL\":(\"\"+defaultValue);\n                if(defaultValue.length>0){\n                    defaultDDL += ('SET DEFAULT ' + defaultValue);\n                }\n                let defaultTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${defaultDDL};`;\n                ret.push(defaultTpl);\n            }\n            \n            if(before.notNull !== after.notNull){\n                let notNullDDL= 'SET NULL';\n                if(after.notNull){\n                    let notNullDDL= 'SET NOT NULL';\n                }\n                let notNullTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${notNullDDL};`;\n                ret.push(notNullTpl);\n            }\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n-- 索引重建\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
        },
        {
          "type": "dbDDL",
          "applyFor": "89504F5D-94BF-4C9E-8B2E-44F37305FED5",
          "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
        },
        {
          "type": "dbDDL",
          "applyFor": "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307",
          "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ','('+field.defaultValue+')',' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
        },
        {
          "type": "dbDDL",
          "applyFor": "592C7013-143D-4E7B-AF64-0D7BF1E28230",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' AUTO_INCREMENT' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
        },
        {
          "type": "dbDDL",
          "applyFor": "77BD85E5-9D0D-4096-8427-CBA306FC9C6A",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
        },
        {
          "applyFor": "11D1FB71-A587-4217-89BA-611B8A1F83E0",
          "type": "dbDDL",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
          "deleteTable": "",
          "createIndex": "",
          "deleteIndex": "",
          "message": "",
          "update": ""
        },
        {
          "applyFor": "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1",
          "type": "dbDDL",
          "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTOINCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }} --{{=it.func.join(field.defName,field.comment,';')}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  ; --{{=it.func.join(it.entity.defName,it.entity.comment,';') }}\n$blankline\n",
          "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
          "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
        },
        {
          "type": "dbDDL",
          "applyFor": "dictSQLTemplate",
          "content": "/* 插入字典总表[{{=it.dict.defKey}}-{{=it.dict.defName}}] */\nINSERT INTO SYS_DICT(KEY_,LABEL,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=it.dict.defName}}','{{=it.dict.intro}}',1);\n/* 插入字典明细表 */\n{{~it.dict.items:item:index}}\nINSERT INTO SYS_DICT_ITEM(DICT_KEY,KEY_,LABEL,SORT_,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=item.defKey}}','{{=item.defName}}','{{=item.sort}}','{{=item.intro}}',1);\n{{~}}"
        },
        {
          "applyFor": "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2",
          "type": "dbDDL",
          "createTable": "/**字段名,关键字等全部用的小写*/\ndrop table if exists {{=it.entity.defKey}};\n/**补充上库名,external关键字根据建表规范看是否添加*/\ncreate [external] table if not exists {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n/**这里把varchar,char,text,date,datetime字段全部映射为string类型.tinyint unsigned,bit,Integer,tinyint,smallint,mediumint映射为int类型,int unsigned映射为bigint.其它自定义映射规则根据自己情况修改*/\n/**当长度>0只有为decimal类型或double类型时才保留长度和小数的位数*/\n{{~it.entity.fields:field:index}}\n    {{=it.func.lowerCase(field.defKey)}} {{=it.func.lowerCase(field.dbType)=='varchar'||it.func.lowerCase(field.dbType)=='char'||it.func.lowerCase(field.dbType)=='text'||it.func.lowerCase(field.dbType)=='date'||it.func.lowerCase(field.dbType)=='datetime' ? 'string':it.func.lowerCase(field.dbType)=='tinyint unsigned'||it.func.lowerCase(field.dbType)=='bit'||it.func.lowerCase(field.dbType)=='integer'||it.func.lowerCase(field.dbType)=='tinyint'||it.func.lowerCase(field.dbType)=='smallint'||it.func.lowerCase(field.dbType)=='mediumint' ? 'int':it.func.lowerCase(field.dbType)=='int unsigned' ? 'bigint':it.func.lowerCase(field.dbType)}}{{?field.len>0&&(it.func.lowerCase(field.dbType)=='decimal'||it.func.lowerCase(field.dbType)=='double')}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{=')'}}{{?}}{{?}} comment '{{=it.func.join(field.defName,field.comment,'')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n{{?}}\n)\n{{\n    let partitionedBy = it.entity.properties['partitioned by'];\n    partitionedBy = partitionedBy?partitionedBy:'请在扩展属性中配置[partitioned by]属性';\n}}\ncomment '{{=it.func.join(it.entity.defName,';') }}'\n/**是否分区表,分区字段名和字段注释自定义*/\n[partitioned by {{=partitionedBy}}]\n/**文件存储格式自定义*/\n[stored as orc]\n/**hdfs上的地址自定义*/\n[location xxx]\n;",
          "createView": "",
          "deleteTable": "",
          "createIndex": "",
          "deleteIndex": "",
          "message": "",
          "update": ""
        },
        {
          "applyFor": "B91D99E0-9B7C-416C-8737-B760957DAF09",
          "type": "appCode",
          "content": "{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1<10?\"0\"+today.getMonth():today.getMonth();\n    var days=today.getDate()<10?\"0\"+today.getDate():today.getDate();\n    var hours = today.getHours()<10?\"0\"+today.getHours():today.getHours();         \n\tvar minutes = today.getMinutes()<10?\"0\"+today.getMinutes():today.getMinutes();      \n\tvar seconds = today.getSeconds()<10?\"0\"+today.getSeconds():today.getSeconds();    \n}}\n// Package models  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\n// author : http://www.liyang.love\n// date : {{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n// desc : {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\npackage models\n\n$blankline\n\n// {{=it.func.camel(it.entity.defKey,true) }}  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}。\n// 说明:{{=it.entity.comment}}\n// 表名:{{=it.entity.defKey}}\n// group: {{=it.func.camel(it.entity.defKey,true) }}\n// obsolete:\n// appliesto:go 1.8+;\n// namespace:hongmouer.his.models.{{=it.func.camel(it.entity.defKey,true) }}\n// assembly: hongmouer.his.models.go\n// class:HongMouer.HIS.Models.{{=it.func.camel(it.entity.defKey,true) }}\n// version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\ntype {{=it.func.camel(it.entity.defKey,true) }} struct {\n    {{~it.entity.fields:field:index}}\n    {{=formatGoLang(it.func.camel(field.defKey,true),null,field,it.entity.fields,null,1)}} {{=formatGoLang(field.type,\"type\",field,it.entity.fields,10,3)}}  `gorm:\"column:{{=field.primaryKey?\"primaryKey;\":\"\"}}{{=field.defKey}}\" json:\"{{=it.func.camel(field.defKey,true)}}\"` {{=formatGoLang(\"gorm:column:\"+field.defKey+\" json:\"+it.func.camel(field.defKey,true),null,field,it.entity.fields,null,2)}}  //type:{{=formatGoLang(field.type,\"type\",field,it.entity.fields,null,3)}}  comment:{{=formatGoLang(it.func.join(field.defName,field.comment,';'),\"defName\",field,it.entity.fields,null,4)}}  version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n    {{~}}\n}\n\n\n$blankline\n// TableName 表名:{{=it.entity.defKey}}，{{=it.entity.defName}}。\n// 说明:{{=it.entity.comment}}\nfunc (ZentaoUserInfo) TableName() string {\n\treturn \"{{=it.entity.defKey}}\"\n}\n\n{{\n\nfunction formatGoLang(str, fieldName, field, fileds, emptLength, isFiled) {\n    var maxLength = 0;\n\n    if (isFiled == 1) {\n        for (var i = 0; i < fileds.length; i++) {\n            if (getBlength(it.func.camel(fileds[i].defKey, true)) > maxLength) {\n                maxLength = getBlength(it.func.camel(fileds[i].defKey, true)) + 2;\n            }\n        }\n    } else if (isFiled == 2) {\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = \"gorm:column:\" + fileds[i].defKey + \" json:\" + it.func.camel(fileds[i].defKey, true);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 2;\n            }\n        }\n        var empt = \"\";\n        var strLength = getBlength(str);\n        if (field.primaryKey) {\n            strLength += getBlength(\"primaryKey;\");\n        }\n        for (var j = 0; j < maxLength - strLength; j++) {\n            empt += ' ';\n        }\n        return empt;\n    } else if (isFiled == 3) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = eval(\"fileds[\" + i + \"].\" + fieldName);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    } else if (isFiled == 4) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = fileds[i].comment + \";\" + fileds[i].defName;\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    }\n    else {\n        maxLength = emptLength;\n    }\n\n    var strLength = getBlength(str);\n    for (var j = 0; j < maxLength - strLength; j++) {\n        str += ' ';\n    }\n    return str;\n}\n\nfunction getBlength(str) {\n    var n = 0;\n    for (var i = str.length; i--;) {\n        n += str.charCodeAt(i) > 255 ? 2 : 1;\n    }\n    return n;\n} \n\n}}"
        },
        {
          "applyFor": "BDF457FD-9F98-4AC3-A705-7587B00A3BAB",
          "type": "appCode",
          "struct": "use chrono::{DateTime, Local};\nuse serde::{Deserialize, Serialize};\n$blankline\n/// {{=it.entity.defName}}\n#[derive(Serialize, Deserialize, Debug, Clone)]\n{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    \n}}\npub struct {{=beanClass}} {\n    {{~it.entity.fields:field:index}}\n    {{\n        let fieldDateType = field.type;\n        if(!field.notNull){\n            fieldDateType = 'Option<'+fieldDateType+'>';\n        }\n    }}/// {{=field.defName}}\n    pub {{=it.func.camel(field.defKey,false)}}: {{=fieldDateType}},\n    {{~}}\n}\n"
        }
      ],
      "generatorDoc": {
        "docTemplate": ""
      },
      "relationFieldSize": "15",
      "uiHint": [
        {
          "defKey": "Input",
          "defName": "普通输入框",
          "id": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "Select",
          "defName": "下拉输入框",
          "id": "FB111359-2B73-4443-926C-08A98E446448"
        },
        {
          "defKey": "CheckBox",
          "defName": "复选框",
          "id": "0CB8A6C9-1115-4FC0-B51E-5C028065082F"
        },
        {
          "defKey": "RadioBox",
          "defName": "单选框",
          "id": "5C04987A-260F-4B7C-A5D5-22A181AAE9CA"
        },
        {
          "defKey": "Double",
          "defName": "小数输入",
          "id": "8D5BAFE4-E15C-4707-A047-8EE59C58E70F"
        },
        {
          "defKey": "Integer",
          "defName": "整数输入",
          "id": "9999AF2A-A44E-415C-A2DC-D7C613BD0073"
        },
        {
          "defKey": "Money",
          "defName": "金额输入",
          "id": "2B0C3D0C-7BAF-4B36-81AD-9362B5E5DC2E"
        },
        {
          "defKey": "Date",
          "defName": "日期输入",
          "id": "E4D94E14-F695-487F-AFC2-4D888009B7DA"
        },
        {
          "defKey": "DataYearMonth",
          "defName": "年月输入",
          "id": "936927E3-DD2D-4096-87FD-074CDE278D59"
        },
        {
          "defKey": "Text",
          "defName": "长文本输入",
          "id": "D89DD4F1-ADAC-4469-BF8D-B3FF41AE7963"
        },
        {
          "defKey": "RichText",
          "defName": "富文本输入",
          "id": "C134EB1F-4CFF-49E0-882F-2C6FB275CB20"
        }
      ],
      "headers": [
        {
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "hideInGraph": true
        }
      ]
    },
    "entities": [
      {
        "defKey": "carousel",
        "defName": "轮播图",
        "comment": "",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "主键",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "9F56D512-0B36-4B4D-A68F-FD3082BF5F67",
            "extProps": {}
          },
          {
            "defKey": "image_url",
            "defName": "图片",
            "comment": "图片地址",
            "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
            "type": "",
            "len": 90,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "C59BA75B-8F1B-49F1-A2E4-44F343A1020A",
            "extProps": {}
          },
          {
            "defKey": "background_color",
            "defName": "背景色",
            "comment": "背景颜色",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "CE3D07B1-F0D6-4718-8AF1-886D4E6AF134",
            "extProps": {}
          },
          {
            "defKey": "item_id",
            "defName": "商品id",
            "comment": "商品id",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "509F672B-A748-4EB0-B3BE-7DB5B5F9045D",
            "extProps": {}
          },
          {
            "defKey": "cat_id",
            "defName": "商品分类id",
            "comment": "商品分类id",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "2D1E30AF-4975-4590-ADF6-4C72C5DE0C40",
            "extProps": {}
          },
          {
            "defKey": "type",
            "defName": "轮播图类型",
            "comment": "轮播图类型，用于判断，可以根据商品id或者分类进行页面跳转，1：商品 2：分类",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "36212A4E-F470-4BD2-BCC2-102B3156BCD8",
            "extProps": {}
          },
          {
            "defKey": "sort",
            "defName": "轮播图展示顺序",
            "comment": "轮播图展示顺序，从小到大",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "232E3C81-5A1F-4ED7-8053-DFF686C49B0F",
            "extProps": {}
          },
          {
            "defKey": "is_show",
            "defName": "是否展示",
            "comment": "是否展示，1：展示    0：不展示",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "BF5A2200-22E3-4D0C-9380-9DF047860385",
            "extProps": {}
          },
          {
            "defKey": "create_time",
            "defName": "创建时间",
            "comment": "创建时间",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "36691D8E-4D37-4513-B377-97824DBD1940",
            "extProps": {}
          },
          {
            "defKey": "update_time",
            "defName": "更新时间",
            "comment": "更新",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "8934065A-7949-4E5B-87C4-AC5D09C017E7",
            "extProps": {}
          }
        ],
        "indexes": [],
        "correlations": [],
        "id": "F7469048-33B5-4383-94BF-DF01CE7B4102"
      },
      {
        "defKey": "category",
        "defName": "商品分类",
        "comment": "",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "主键",
            "comment": "分类id主键",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": true,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "C84838D4-582F-4426-B295-A89A88DE0105",
            "extProps": {}
          },
          {
            "defKey": "name",
            "defName": "分类名称",
            "comment": "分类名称",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "5F576233-85DF-4A27-84C5-E327A50C194C",
            "extProps": {}
          },
          {
            "defKey": "type",
            "defName": "分类类型",
            "comment": "分类得类型，\n1:一级大分类\n2:二级分类\n3:三级小分类",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "B1EEE7FA-E8CD-4A62-B218-E2033BB234C9",
            "extProps": {}
          },
          {
            "defKey": "father_id",
            "defName": "父id",
            "comment": "父id 上一级依赖的id，1级分类则为0，二级三级分别依赖上一级",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "49A96F37-B9F8-44E4-B7F1-57A06575AA0D",
            "extProps": {}
          },
          {
            "defKey": "logo",
            "defName": "图标",
            "comment": "logo",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "C8620ECA-831E-498C-A907-A45C53048940",
            "extProps": {}
          },
          {
            "defKey": "slogan",
            "defName": "口号",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "199224B4-B5AE-4594-ADA3-9D44C504E9F7",
            "extProps": {}
          },
          {
            "defKey": "cat_image",
            "defName": "分类图",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "E497942B-2D79-494F-8582-8E52AF2F81E6",
            "extProps": {}
          },
          {
            "defKey": "bg_color",
            "defName": "背景颜色",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "262776C8-2779-4A27-B337-2D657AD892CE",
            "extProps": {}
          }
        ],
        "indexes": [],
        "correlations": [],
        "id": "04B806AD-F55C-40DB-BDC6-5877B16B4AB8"
      },
      {
        "defKey": "users",
        "defName": "用户表",
        "comment": "",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "主键id",
            "comment": "用户id",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "34984E76-A096-481D-B3CE-5F98D8FFC8E4",
            "extProps": {}
          },
          {
            "defKey": "username",
            "defName": "用户名",
            "comment": "用户名",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "4555C374-829E-4E5E-9A7D-D8C2FF9DE337",
            "extProps": {}
          },
          {
            "defKey": "password",
            "defName": "密码",
            "comment": "密码",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "651D0101-1C6D-4225-92BF-ACDA6D297E51",
            "extProps": {}
          },
          {
            "defKey": "nickname",
            "defName": "昵称",
            "comment": "昵称",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "11CDA8AA-F1CD-423C-881D-E319C3953E3E",
            "extProps": {}
          },
          {
            "defKey": "realname",
            "defName": "真实姓名",
            "comment": "真实姓名",
            "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
            "type": "",
            "len": 90,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "B30F9116-4FCB-47B6-AA60-0F030120B938",
            "extProps": {}
          },
          {
            "defKey": "face",
            "defName": "头像",
            "comment": "头像",
            "domain": "7EFC4192-83B4-46FA-8C86-442612A2CA30",
            "type": "",
            "len": 1024,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "1859B411-DC37-42F0-B30E-04ECBA285BD4",
            "extProps": {}
          },
          {
            "defKey": "mobile",
            "defName": "手机号",
            "comment": "手机号",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "37EE16C6-0145-445B-9F0A-C0CE063F5F91",
            "extProps": {}
          },
          {
            "defKey": "email",
            "defName": "邮箱地址",
            "comment": "邮箱地址",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "C93DD723-80D2-4C60-A31A-8F6E4219EFAA",
            "extProps": {}
          },
          {
            "defKey": "sex",
            "defName": "性别",
            "comment": "性别 1:男  0:女  2:保密",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "2",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "FDC921E5-6245-45F3-A7A8-EAF8178A198E",
            "extProps": {}
          },
          {
            "defKey": "birthday",
            "defName": "生日",
            "comment": "生日",
            "domain": "2FD91618-E6CB-4C11-83AA-A05C82359B6B",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "3A4E78B6-A6D1-486A-AEFB-89A83A162DB2",
            "extProps": {}
          },
          {
            "defKey": "created_time",
            "defName": "创建时间",
            "comment": "创建时间",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "CURRENT_TIMESTAMP",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "79D11C7F-1C65-4310-BAED-EF6B65F56E8C",
            "extProps": {}
          },
          {
            "defKey": "updated_time",
            "defName": "更新时间",
            "comment": "更新时间",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "CURRENT_TIMESTAMP",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "880B85B9-30A4-4E47-8FE3-D38BD6AC2C96",
            "extProps": {}
          }
        ],
        "indexes": [
          {
            "defKey": "username",
            "unique": true,
            "defName": null,
            "comment": "",
            "fields": [
              {
                "ascOrDesc": "A",
                "fieldDefKey": "4555C374-829E-4E5E-9A7D-D8C2FF9DE337",
                "id": "833F16DE-A01C-44D0-863C-16E2F9E1C504"
              }
            ],
            "id": "19DF471F-89B5-44C4-95E4-B274F4959605"
          }
        ],
        "correlations": [],
        "id": "63D1CD4B-62E1-4089-BD0B-2066C4449D35"
      },
      {
        "defKey": "user_address",
        "defName": "用户地址表",
        "comment": "",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "地址主键id",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "034A6367-1E7B-4C3B-8D19-AAA6E636CA49",
            "extProps": {}
          },
          {
            "defKey": "user_id",
            "defName": "关联用户id",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "8694A3A9-D87D-41FA-BB70-85286D0DB4A9",
            "extProps": {}
          },
          {
            "defKey": "receiver",
            "defName": "收件人姓名",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "892EF0AC-AAA4-4EE3-9DA2-40CB58C77921",
            "extProps": {}
          },
          {
            "defKey": "mobile",
            "defName": "收件人手机号",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "32813525-A5F9-4E8B-B1D1-C45853A07106",
            "extProps": {}
          },
          {
            "defKey": "province",
            "defName": "省份",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "D72173C0-D063-4A1C-B4CF-E205FCC143D2",
            "extProps": {}
          },
          {
            "defKey": "city",
            "defName": "城市",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "7E2021A5-9E60-4D9C-A979-B0BB5D0B573E",
            "extProps": {}
          },
          {
            "defKey": "district",
            "defName": "区县",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "8FD26909-C820-432F-A30D-BC892FD1FC7F",
            "extProps": {}
          },
          {
            "defKey": "detail",
            "defName": "详细地址",
            "comment": "",
            "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
            "type": "",
            "len": 90,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "CF6989D0-85EF-4455-8600-1278A98E752E",
            "extProps": {}
          },
          {
            "defKey": "extand",
            "defName": "扩展字段",
            "comment": "",
            "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
            "type": "",
            "len": 90,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "1737892F-F56B-4B02-AFAC-A47462056814",
            "extProps": {}
          },
          {
            "defKey": "is_default",
            "defName": "是否默认地址",
            "comment": "1:是  0:否",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "DBA5D8BC-9E2E-4886-8613-59916D5D014E",
            "extProps": {}
          },
          {
            "defKey": "created_time",
            "defName": "创建时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "76E700D6-712A-4EEF-A6F1-08739D6F0BAB",
            "extProps": {}
          },
          {
            "defKey": "updated_time",
            "defName": "更新时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "FDFF1ACF-A35D-4DEA-87B3-66DFD72284E9",
            "extProps": {}
          }
        ],
        "indexes": [],
        "correlations": [],
        "id": "687B0F44-DD1C-4E82-B1D0-2A73C29067D6"
      },
      {
        "defKey": "items",
        "defName": "商品表",
        "comment": "商品信息相关表：分类表，商品图片表，商品规格表，商品参数表",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "商品主键id",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "8EA78DA8-33E3-4754-813C-1DD106F1EDD0",
            "extProps": {}
          },
          {
            "defKey": "item_name",
            "defName": "商品名称",
            "comment": "商品名称",
            "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
            "type": "",
            "len": 32,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "EB85E62F-DA45-4C21-B7C1-CCA36A276385",
            "extProps": {}
          },
          {
            "defKey": "cat_id",
            "defName": "分类外键id",
            "comment": "分类id",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "FD6D0722-1434-4CC3-B409-33DAA563F433",
            "extProps": {}
          },
          {
            "defKey": "root_cat_id",
            "defName": "一级分类外键id",
            "comment": "一级分类id，用于优化查询",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "99BE6804-6664-4470-BF10-F693E09E9A3F",
            "extProps": {}
          },
          {
            "defKey": "sell_counts",
            "defName": "累计销售",
            "comment": "累计销售",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "6058734F-9D7E-43A7-8B9F-42021C669C18",
            "extProps": {}
          },
          {
            "defKey": "on_off_status",
            "defName": "上下架状态",
            "comment": "上下架状态,1:上架 2:下架",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "AA21F6CD-738F-4927-B199-37E4FA08680D",
            "extProps": {}
          },
          {
            "defKey": "content",
            "defName": "商品内容",
            "comment": "商品内容",
            "domain": "459F8196-201B-46F9-899D-29ECA475BA16",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "97A3F086-D326-4A08-BF77-8896FBA5054C",
            "extProps": {}
          },
          {
            "defKey": "created_time",
            "defName": "创建时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "E1133B48-7D17-430E-929E-2B990E825534",
            "extProps": {}
          },
          {
            "defKey": "updated_time",
            "defName": "更新时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "D7A451BB-33F2-4916-A609-1540DCAFB297",
            "extProps": {}
          }
        ],
        "indexes": [],
        "correlations": [],
        "id": "34CCC366-32F7-441C-BD3F-597727F1DD3D"
      },
      {
        "defKey": "items_img",
        "defName": "商品图片",
        "comment": "",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "图片主键",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "39903178-EA07-4F06-894E-07688064B160",
            "extProps": {}
          },
          {
            "defKey": "item_id",
            "defName": "商品外键id",
            "comment": "商品外键id",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "E29D7014-F93F-4FF0-BC17-5599CFF7639D",
            "extProps": {}
          },
          {
            "defKey": "url",
            "defName": "图片地址",
            "comment": "图片地址",
            "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
            "type": "",
            "len": 90,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "00DB5BA6-B37F-4B7C-B66A-BC38A5BE91CF",
            "extProps": {}
          },
          {
            "defKey": "sort",
            "defName": "顺序",
            "comment": "图片顺序，从小到大",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "AE349BD9-0AE9-425A-AF86-AC19782322FA",
            "extProps": {}
          },
          {
            "defKey": "is_main",
            "defName": "是否主图",
            "comment": "是否主图，1：是，0：否",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "DEC53560-4620-46D1-89A1-EBC83A3C6195",
            "extProps": {}
          },
          {
            "defKey": "created_time",
            "defName": "创建时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "1F203DEA-2A6B-49D7-B431-5969931C027D",
            "extProps": {}
          },
          {
            "defKey": "updated_time",
            "defName": "更新时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "471C281F-1AA3-4706-B20F-060DECB9B04D",
            "extProps": {}
          }
        ],
        "indexes": [],
        "correlations": [],
        "id": "D1DBBEF5-5C3B-477C-B37B-B3E48F0BE00C"
      },
      {
        "defKey": "items_spec",
        "defName": "商品规格",
        "comment": "每一件商品都有不同的规格，不同的规格又有不同的价格和优惠力度，规格表为此设计",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "商品规格id",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "0F935E7E-69F3-41A9-B0BD-C27A743E2B7E",
            "extProps": {}
          },
          {
            "defKey": "item_id",
            "defName": "商品外键id",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "6932554F-6685-48D1-89BD-13C8A5920010",
            "extProps": {}
          },
          {
            "defKey": "name",
            "defName": "规格名称",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "BB87D193-238E-4FB5-A4A8-52FB4920053E",
            "extProps": {}
          },
          {
            "defKey": "stock",
            "defName": "库存",
            "comment": "",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "D5838A1E-9766-4F5D-95B9-A9456D1B98DF",
            "extProps": {}
          },
          {
            "defKey": "discounts",
            "defName": "折扣力度",
            "comment": "",
            "domain": "B675F23D-D9B6-49EF-9E02-DA9CD16A17DD",
            "type": "",
            "len": 4,
            "scale": 2,
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "D1037A97-6EB4-432A-A5FC-2534BC6F21BE",
            "extProps": {}
          },
          {
            "defKey": "price_discount",
            "defName": "优惠价",
            "comment": "",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "2815B5DA-10C8-4BEE-BB0A-617898C7EE5E",
            "extProps": {}
          },
          {
            "defKey": "price_normal",
            "defName": "原价",
            "comment": "",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "9D9939E8-29D2-4A10-95B3-FA19D21A6A8E",
            "extProps": {}
          },
          {
            "defKey": "created_time",
            "defName": "创建时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "192F58C0-597C-41DB-AED0-B7319EE79DC1",
            "extProps": {}
          },
          {
            "defKey": "updated_time",
            "defName": "更新时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "99BBA512-D902-49E9-8629-CE70681E97C4",
            "extProps": {}
          }
        ],
        "indexes": [],
        "correlations": [],
        "id": "C1F35237-BBDE-4E2A-9A3E-372D57505750"
      },
      {
        "defKey": "items_param",
        "defName": "商品参数",
        "comment": "",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "商品参数id",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "F7107123-14E7-4655-9504-AC0C88DFB418",
            "extProps": {}
          },
          {
            "defKey": "item_id",
            "defName": "商品外键id",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "7FCA43E1-DC6C-44DE-8BF9-99A396B4E9F0",
            "extProps": {}
          },
          {
            "defKey": "produc_place",
            "defName": "产地",
            "comment": "产地，例：中国江苏",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "99D89DCC-13C3-4FDD-86DE-393831A97757",
            "extProps": {}
          },
          {
            "defKey": "foot_period",
            "defName": "保质期",
            "comment": "保质期，例：180天",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "5E60D452-0FB2-426A-9E89-C4A54D441DC5",
            "extProps": {}
          },
          {
            "defKey": "brand",
            "defName": "品牌名",
            "comment": "品牌名，例：三只大灰狼",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "FC43CFB4-EB4C-4340-ADDA-20208C85733E",
            "extProps": {}
          },
          {
            "defKey": "factory_name",
            "defName": "生产厂名",
            "comment": "生产厂名，例：大灰狼工厂",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "7E554F22-63CC-43A4-9D4F-ACA2D3B7F3F0",
            "extProps": {}
          },
          {
            "defKey": "factory_address",
            "defName": "生产厂址",
            "comment": "生产厂址，例：大灰狼生产基地",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "3D42B2C2-CB70-41A7-AA64-0C2F68C6A2E4",
            "extProps": {}
          },
          {
            "defKey": "packaging_method",
            "defName": "包装方式",
            "comment": "包装方式，例：袋装",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "A5A9160C-2072-4D99-96F5-B9A17BD38194",
            "extProps": {}
          },
          {
            "defKey": "weight",
            "defName": "规格重量",
            "comment": "规格重量，例：35g",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "FF3DDA01-4FB0-4C23-8C00-9F5E14379E5E",
            "extProps": {}
          },
          {
            "defKey": "storage_method",
            "defName": "存储方法",
            "comment": "存储方法，例：常温5~25°",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "17784004-32E0-4B2E-90FC-964F17BF614F",
            "extProps": {}
          },
          {
            "defKey": "eat_method",
            "defName": "食用方式",
            "comment": "食用方式，例：开袋即食",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "7C92AC8C-0F5D-415A-8617-0A8DE0D78F03",
            "extProps": {}
          },
          {
            "defKey": "created_time",
            "defName": "创建时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "2F19EF68-E400-4AC3-AD2C-2AE6CDD7EA2D",
            "extProps": {}
          },
          {
            "defKey": "updated_time",
            "defName": "更新时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "2B69407E-40B7-4D71-AE4C-B0A8A382D3B9",
            "extProps": {}
          }
        ],
        "indexes": [],
        "correlations": [],
        "id": "F08B4574-CA1D-4F89-918B-A0A70B970B68"
      },
      {
        "defKey": "items_comments",
        "defName": "商品评价表",
        "comment": "",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "id主键",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "6483A415-6505-4965-9AA9-930AFDB9EE40",
            "extProps": {}
          },
          {
            "defKey": "user_id",
            "defName": "用户id",
            "comment": "用户名须脱敏",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "78BF66D8-D46A-4CF1-B28B-67D29C66C03D",
            "extProps": {}
          },
          {
            "defKey": "item_id",
            "defName": "商品id",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "CE305058-7DB5-44AB-9822-77020BC39F78",
            "extProps": {}
          },
          {
            "defKey": "item_name",
            "defName": "商品名称",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "0BB2190D-63F7-4F58-B314-AC4EFF11524E",
            "extProps": {}
          },
          {
            "defKey": "item_spec_id",
            "defName": "商品规格id",
            "comment": "可为空",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "600E32DD-B883-42EE-8420-2BE83D95CD3E",
            "extProps": {}
          },
          {
            "defKey": "sepc_name",
            "defName": "规格名称",
            "comment": "可为空",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "2C905679-2146-4D26-BC59-3894F099EF1B",
            "extProps": {}
          },
          {
            "defKey": "comment_level",
            "defName": "评价等级",
            "comment": "1：好评 2：中评 3：差评",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "AF737E3E-9C40-42A2-98D6-66857C571BB5",
            "extProps": {}
          },
          {
            "defKey": "content",
            "defName": "评价内容",
            "comment": "",
            "domain": "255BF709-24F0-4D3B-BA88-1D59E0F92412",
            "type": "",
            "len": 128,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "DE47685F-739E-4973-8DEA-A1125C92BCCB",
            "extProps": {}
          },
          {
            "defKey": "created_time",
            "defName": "创建时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "C10CD4BC-F889-4C96-AF2E-497775461F87",
            "extProps": {}
          },
          {
            "defKey": "updated_time",
            "defName": "更新时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "5DEE7488-3965-473E-859D-A6E28A01D13B",
            "extProps": {}
          }
        ],
        "indexes": [],
        "correlations": [],
        "id": "61B8CDED-C940-447A-BE48-D1F0C87A7B2D"
      },
      {
        "defKey": "orders",
        "defName": "订单表",
        "comment": "",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "订单主键",
            "comment": "同时也是订单编号",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "E123E488-D745-44B2-A9E1-26C704A5F576",
            "extProps": {}
          },
          {
            "defKey": "user_id",
            "defName": "用户id",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "77C9F75B-8B86-4560-A43D-AF2ECACE4A90",
            "extProps": {}
          },
          {
            "defKey": "receiver_name",
            "defName": "收货人快照",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "5268EA90-2AA7-4D02-BA49-2EA1BAED6BF3",
            "extProps": {}
          },
          {
            "defKey": "receiver_mobile",
            "defName": "收货人手机号快照",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "30F6D5D1-CC03-4C5E-ACE6-357D74FF7A26",
            "extProps": {}
          },
          {
            "defKey": "receiver_address",
            "defName": "收货地址快照",
            "comment": "",
            "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
            "type": "",
            "len": 90,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "81247012-7CD7-4DEB-B342-78CCA05F0157",
            "extProps": {}
          },
          {
            "defKey": "total_amount",
            "defName": "订单总价格",
            "comment": "",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "AC6B6801-4F0C-49BA-BDE8-FEA0FDC599DD",
            "extProps": {}
          },
          {
            "defKey": "real_pay_amount",
            "defName": "实际支付总价格",
            "comment": "",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "D558A078-D566-4F02-B098-3C2D6F31098E",
            "extProps": {}
          },
          {
            "defKey": "post_amount",
            "defName": "邮费",
            "comment": "默认可以为零，代表包邮",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "0",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "FBE022EA-E2D5-459C-8E04-811314217337",
            "extProps": {}
          },
          {
            "defKey": "pay_method",
            "defName": "支付方式",
            "comment": "1:微信 2:支付宝",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "A131DEFA-B967-4D2F-B6BB-534BB0A326E9",
            "extProps": {}
          },
          {
            "defKey": "left_msg",
            "defName": "买家留言",
            "comment": "",
            "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
            "type": "",
            "len": 90,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "070814BB-1A8A-49DE-BC4B-4A99A34DE697",
            "extProps": {}
          },
          {
            "defKey": "extand",
            "defName": "扩展字段",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "2C9563C9-C0E6-4EC9-9E71-B9ADE76C4027",
            "extProps": {}
          },
          {
            "defKey": "is_comment",
            "defName": "买家是否评价",
            "comment": "1：已评价，0：未评价",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "FA10A7BA-5F3E-4790-93B1-1308CA3C64AB",
            "extProps": {}
          },
          {
            "defKey": "is_delete",
            "defName": "逻辑删除状态",
            "comment": "1: 删除 0:未删除",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "0",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "3FEE80B9-8E3F-4D7F-AB8E-90D0DCB5C3E9",
            "extProps": {}
          },
          {
            "defKey": "created_time",
            "defName": "创建时间（成交时间）",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "170ED749-6017-402F-BEC9-B7F0197C3EC1",
            "extProps": {}
          },
          {
            "defKey": "updated_time",
            "defName": "更新时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "174BAD10-D66F-4ACD-AD98-B771720BDC81",
            "extProps": {}
          }
        ],
        "indexes": [],
        "correlations": [],
        "id": "7C2F19A1-8DD2-4D3A-BBD4-04D4264E8A22"
      },
      {
        "defKey": "order_items",
        "defName": "订单商品关联表",
        "comment": "",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "主键id",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "D53F9AFC-C5D0-43FB-8F15-CC88E2B263CE",
            "extProps": {}
          },
          {
            "defKey": "order_id",
            "defName": "归属订单id",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "B3314B06-4D84-41AD-AF97-EAF85FB421A7",
            "extProps": {}
          },
          {
            "defKey": "item_id",
            "defName": "商品id",
            "comment": "",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "EA8A3474-2559-484F-8E41-019F18B9AF44",
            "extProps": {}
          },
          {
            "defKey": "item_img",
            "defName": "商品图片",
            "comment": "",
            "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
            "type": "",
            "len": 90,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "6207E228-6C7C-4FCE-B428-3D23F4B5BB02",
            "extProps": {}
          },
          {
            "defKey": "item_name",
            "defName": "商品名称",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "59D42E3F-8922-412B-B810-FBB22171E8A7",
            "extProps": {}
          },
          {
            "defKey": "item_spec_id",
            "defName": "规格id",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "75BF3E34-E95F-44D3-9568-579D75CFF238",
            "extProps": {}
          },
          {
            "defKey": "item_spec_name",
            "defName": "规格名称",
            "comment": "",
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "type": "",
            "len": 255,
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "99E87027-CE43-4187-A0FB-71B444A1570E",
            "extProps": {}
          },
          {
            "defKey": "price",
            "defName": "成交价格",
            "comment": "",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "8580F91C-3646-40D9-9710-E55C92AA95E2",
            "extProps": {}
          },
          {
            "defKey": "buy_counts",
            "defName": "购买数量",
            "comment": "",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "BA3513E9-A1F4-48D8-A3C9-5E3952413F09",
            "extProps": {}
          }
        ],
        "indexes": [],
        "correlations": [],
        "id": "7C0441D6-45A6-4E5D-B103-01BA1B9819A7"
      },
      {
        "defKey": "order_status",
        "defName": "订单状态表",
        "comment": "订单的每个状态更改都需要进行记录\n10：待付款  20：已付款，待发货  30：已发货，待收货（7天自动确认）  40：交易成功（此时可以评价）50：交易关闭（待付款时，用户取消 或 长时间未付款，系统识别后自动关闭）\n退货/退货，此分支流程不做，所以不加入",
        "properties": {
          "partitionBy": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "headers": [
          {
            "refKey": "defName",
            "hideInGraph": false
          },
          {
            "refKey": "defKey",
            "hideInGraph": false
          },
          {
            "refKey": "domain",
            "hideInGraph": false
          },
          {
            "refKey": "type",
            "hideInGraph": true
          },
          {
            "refKey": "comment",
            "hideInGraph": true
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true
          },
          {
            "refKey": "hideInGraph",
            "hideInGraph": true
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true
          },
          {
            "refKey": "len",
            "hideInGraph": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false
          },
          {
            "refKey": "refDict",
            "hideInGraph": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false
          },
          {
            "refKey": "extProps",
            "hideInGraph": true
          }
        ],
        "fields": [
          {
            "defKey": "order_id",
            "defName": "订单ID",
            "comment": "对应订单表的主键id",
            "domain": "B42A7821-D390-4676-8C1B-22163E0C61DC",
            "type": "",
            "len": 64,
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "0CB13752-835B-4453-8327-A8E9FB4CA749",
            "extProps": {}
          },
          {
            "defKey": "order_status",
            "defName": "订单状态",
            "comment": "",
            "domain": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "FD261481-FF0E-4CB0-A0CD-BAAD47A5876B",
            "extProps": {}
          },
          {
            "defKey": "created_time",
            "defName": "订单创建时间",
            "comment": "对应[10:待付款]状态",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "FD23464B-FC47-434E-B68F-E2D97FEDAFE2",
            "extProps": {}
          },
          {
            "defKey": "pay_time",
            "defName": "支付成功时间",
            "comment": "对应[20:已付款，待发货]状态",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "B2C5AB58-BB9D-4F71-988E-22C328D959B5",
            "extProps": {}
          },
          {
            "defKey": "deliver_time",
            "defName": "发货时间",
            "comment": "对应[30：已发货，待收货]状态",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "2C41D6BE-CD5C-48AE-8CDA-AD88397460A0",
            "extProps": {}
          },
          {
            "defKey": "success_time",
            "defName": "交易成功时间",
            "comment": "对应[40：交易成功]状态",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "108AA1C8-9223-4D36-9ED3-0F98167BEB81",
            "extProps": {}
          },
          {
            "defKey": "close_time",
            "defName": "交易关闭时间",
            "comment": "对应[50：交易关闭]状态",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "BFE61F8C-C002-4BA4-8A35-485321DD757C",
            "extProps": {}
          },
          {
            "defKey": "comment_time",
            "defName": "留言时间",
            "comment": "用户在交易成功后的留言时间",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "uiHint": "",
            "id": "7CDA8B2D-1A6D-4052-BB1D-1DAB941DC4BD",
            "extProps": {}
          }
        ],
        "indexes": [],
        "correlations": [],
        "id": "E4B6C84A-C32B-4013-A830-399ABC9FE43E"
      },
      {
        "id": "404274D2-67B6-4F74-9E82-CC0C2470D455",
        "env": {
          "base": {
            "nameSpace": "",
            "codeRoot": ""
          }
        },
        "defKey": "stu",
        "defName": "",
        "comment": "",
        "properties": {
          "partitioned by": "(date string)",
          "row format delimited": "",
          "fields terminated by ','": "",
          "collection items terminated by '-'": "",
          "map keys terminated by ':'": "",
          "store as textfile;": ""
        },
        "nameTemplate": "{defKey}[{defName}]",
        "notes": {},
        "headers": [
          {
            "refKey": "hideInGraph",
            "freeze": true,
            "hideInGraph": true,
            "code": "relationNoShow",
            "value": "关系图",
            "newCode": "hideInGraph",
            "com": "Icon",
            "relationNoShow": true
          },
          {
            "refKey": "defKey",
            "freeze": true,
            "hideInGraph": false,
            "code": "name",
            "value": "字段代码",
            "newCode": "defKey",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "defName",
            "hideInGraph": false,
            "code": "chnname",
            "value": "显示名称",
            "newCode": "defName",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "primaryKey",
            "hideInGraph": false,
            "code": "pk",
            "value": "主键",
            "newCode": "primaryKey",
            "com": "Checkbox",
            "relationNoShow": false
          },
          {
            "refKey": "notNull",
            "hideInGraph": true,
            "code": "notNull",
            "value": "不为空",
            "newCode": "notNull",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "autoIncrement",
            "hideInGraph": true,
            "code": "autoIncrement",
            "value": "自增",
            "newCode": "autoIncrement",
            "com": "Checkbox",
            "relationNoShow": true
          },
          {
            "refKey": "domain",
            "hideInGraph": true,
            "code": "type",
            "value": "数据域",
            "newCode": "domain",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "type",
            "hideInGraph": false,
            "code": "dataType",
            "value": "数据类型",
            "newCode": "type",
            "com": "Text",
            "relationNoShow": false
          },
          {
            "refKey": "len",
            "hideInGraph": false,
            "code": "len",
            "value": "长度",
            "newCode": "len",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "scale",
            "hideInGraph": false,
            "code": "scale",
            "value": "小数位数",
            "newCode": "scale",
            "com": "Input",
            "relationNoShow": false
          },
          {
            "refKey": "comment",
            "hideInGraph": true,
            "code": "remark",
            "value": "说明",
            "newCode": "comment",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "refDict",
            "hideInGraph": true,
            "code": "refDict",
            "value": "数据字典",
            "newCode": "refDict",
            "com": "SearchSelect",
            "relationNoShow": true
          },
          {
            "refKey": "defaultValue",
            "hideInGraph": true,
            "code": "defaultValue",
            "value": "默认值",
            "newCode": "defaultValue",
            "com": "Input",
            "relationNoShow": true
          },
          {
            "refKey": "isStandard",
            "hideInGraph": false,
            "code": "isStandard",
            "value": "标准字段",
            "newCode": "isStandard",
            "com": "label",
            "relationNoShow": false
          },
          {
            "refKey": "uiHint",
            "hideInGraph": true,
            "code": "uiHint",
            "value": "UI建议",
            "newCode": "uiHint",
            "com": "Select",
            "relationNoShow": true
          },
          {
            "refKey": "extProps",
            "hideInGraph": true,
            "code": "extProps",
            "value": "拓展属性",
            "newCode": "extProps",
            "com": "linkButton",
            "relationNoShow": true
          }
        ],
        "fields": [
          {
            "defKey": "id",
            "defName": "",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": true,
            "notNull": true,
            "autoIncrement": true,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "3D0416CC-7BDA-4FAF-9DEF-38ACEEC87D38"
          },
          {
            "defKey": "CREATED_TIME",
            "defName": "创建时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "D934784D-C102-4C8E-A92D-CD2AEF835CB4"
          },
          {
            "defKey": "UPDATED_TIME",
            "defName": "更新时间",
            "comment": "",
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": true,
            "refDict": "",
            "uiHint": "",
            "id": "3CC38DE4-42B6-4D41-A724-D55DBC850047"
          },
          {
            "defKey": "name",
            "defName": "",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": true,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "id": "1AAB80B2-A6AA-4BE2-BCDC-8A5753476856"
          },
          {
            "defKey": "age",
            "defName": "",
            "comment": "",
            "type": "",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "refDict": "",
            "extProps": {},
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "id": "F14D6843-CE99-4C3C-B57D-AC47044AF613"
          }
        ],
        "correlations": [],
        "indexes": []
      }
    ],
    "views": [],
    "dicts": [
      {
        "defKey": "Gender",
        "defName": "性别",
        "intro": "",
        "items": [
          {
            "defKey": "M",
            "defName": "男",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "1",
            "id": "3622D417-DA1A-408F-BEE1-11D328D534A0"
          },
          {
            "defKey": "F",
            "defName": "女",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "2",
            "id": "380A0790-64A7-481E-831C-32F7BEE1502B"
          },
          {
            "defKey": "U",
            "defName": "未知",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "3",
            "id": "FA239F4D-1276-40D9-B230-F66BD35C3C27"
          }
        ],
        "id": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D"
      },
      {
        "defKey": "Political",
        "defName": "政治面貌",
        "intro": "",
        "items": [
          {
            "defKey": "10",
            "defName": "共青团员",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "61F3145A-7599-4CCB-B298-D5EE788107BE"
          },
          {
            "defKey": "20",
            "defName": "中共党员",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "ED16D25A-AB2F-4FA0-BB48-2B9031FA28C4"
          },
          {
            "defKey": "30",
            "defName": "民主党派",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "0FB7974A-AE11-438F-86E0-B163316F9272"
          },
          {
            "defKey": "40",
            "defName": "群众",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "7D247234-7E97-45B1-8C56-4A17A370854A"
          },
          {
            "defKey": "90",
            "defName": "未知",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "DA65D752-AF04-4A11-81D8-14A38692A64A"
          }
        ],
        "id": "06EED564-BBA9-4747-8D73-AF809A330CB8"
      },
      {
        "defKey": "Marital",
        "defName": "婚姻状况",
        "intro": "婚姻状况的码表",
        "items": [
          {
            "defKey": "UNMARRIED",
            "defName": "未婚",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "1",
            "id": "20EE81BC-74EE-47DA-A56F-9663B23F44BD"
          },
          {
            "defKey": "MARRIED",
            "defName": "已婚",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "2",
            "id": "4DCA10A8-417E-4A8D-BDF6-0A278C060ADC"
          },
          {
            "defKey": "WIDOWED",
            "defName": "丧偶",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "3",
            "id": "826062A7-057C-4892-B338-06459F5B808D"
          },
          {
            "defKey": "DIVORCE",
            "defName": "离婚",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "4",
            "id": "B23200B4-5E59-4F5E-A779-D981A040FA32"
          },
          {
            "defKey": "UNSPECIFIED",
            "defName": "未说明",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "5",
            "id": "A7928FE2-349A-4702-9682-2EF7205E077B"
          }
        ],
        "id": "EA1587B7-3954-437A-BFE0-FCB0453BCABA"
      },
      {
        "defKey": "StudentStatus",
        "defName": "学生状态",
        "intro": "",
        "items": [
          {
            "defKey": "Normal",
            "defName": "正常",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "1",
            "id": "E9CA1CC9-8851-4F6B-86BA-B9CF0E44EB73"
          },
          {
            "defKey": "Graduated",
            "defName": "毕业",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "2",
            "id": "DEC51D7C-99DF-430C-817D-0499862D3CCC"
          },
          {
            "defKey": "Studied",
            "defName": "肄业",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "3",
            "id": "8853D6B6-75D3-4479-9006-FC731CD85B20"
          },
          {
            "defKey": "Stop",
            "defName": "休学",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "sort": "4",
            "id": "C74BA8CF-1DC6-4C79-BAAC-F11EB9C6AF01"
          }
        ],
        "id": "4642BC5F-02EE-4E17-A60C-CF22F86A0282"
      },
      {
        "defKey": "GBNation",
        "defName": "民族",
        "intro": "",
        "items": [
          {
            "defKey": "01",
            "defName": "汉族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "9224DF53-F7C0-447D-B8ED-0A39F799EE19"
          },
          {
            "defKey": "02",
            "defName": "蒙古族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "D57818E3-9206-45BB-AE79-27C64A4AB80F"
          },
          {
            "defKey": "03",
            "defName": "回族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "0A1A3CA9-6D68-4E15-8BD0-9A2FF428D804"
          },
          {
            "defKey": "04",
            "defName": "藏族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "7CC6B6BE-47EA-460E-ACFA-C377468DEA11"
          },
          {
            "defKey": "05",
            "defName": "维吾尔族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "A666D51F-D249-4FAC-B1F3-78C371836CB3"
          },
          {
            "defKey": "06",
            "defName": "苗族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "A0C9E1BA-D87B-4695-ADFA-287FDA32BB5A"
          },
          {
            "defKey": "07",
            "defName": "彝族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "149B5B9E-C1D1-4790-8CCF-0ED5F4B25172"
          },
          {
            "defKey": "08",
            "defName": "壮族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "F9A3E65C-BF4D-4C6B-ADB7-8C9CF0487360"
          },
          {
            "defKey": "09",
            "defName": "布依族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "14F17DE4-E96A-460B-98A6-F84EC8CF9885"
          },
          {
            "defKey": "10",
            "defName": "朝鲜族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "8A81AB18-B1BF-4797-A6E5-DEDB2C6566B0"
          },
          {
            "defKey": "11",
            "defName": "满族",
            "intro": "",
            "parentKey": "",
            "enabled": true,
            "attr1": "",
            "attr2": "",
            "attr3": "",
            "id": "7D460947-FBD2-4E4D-8366-3B38DCAF09D1"
          }
        ],
        "id": "115EDEFC-0323-410E-81AB-CCAB8879837A"
      },
      {
        "defKey": "GradeLevel",
        "defName": "受教育程度",
        "sort": "",
        "intro": "",
        "items": [],
        "id": "9E7C9788-B805-4C7D-8531-FD1D9DC79B05"
      }
    ],
    "viewGroups": [
      {
        "defKey": "foodie-shop",
        "defName": "天天吃货",
        "refEntities": [],
        "refDiagrams": [],
        "refViews": [],
        "refDicts": [],
        "id": "5078E8FB-C190-492F-AAB6-1C220E0386E3"
      }
    ],
    "dataTypeMapping": {
      "referURL": "",
      "mappings": [
        {
          "defKey": "string",
          "id": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "defName": "字串",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "VARCHAR",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "VARCHAR2",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "VARCHAR",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "VARCHAR",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "VARCHAR",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "VARCHAR2",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "VARCHAR",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "VARCHAR",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "STRING",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "TEXT",
          "797A1496-D649-4261-89B4-544132EC3F36": "String",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "String",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "String",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "string",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "string",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "string",
          "BDF457FD-9F98-4AC3-A705-7587B00A3BAB": "String"
        },
        {
          "defKey": "double",
          "id": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "defName": "小数",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "DECIMAL",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "DECIMAL",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "DECIMAL",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "NUMERIC",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "DECIMAL",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "DECIMAL",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "NUMERIC",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "NUMERIC",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "DOUBLE",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "REAL",
          "797A1496-D649-4261-89B4-544132EC3F36": "Double",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Double",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Double",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "decimal",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "double",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "*float64",
          "BDF457FD-9F98-4AC3-A705-7587B00A3BAB": "f64"
        },
        {
          "defKey": "int",
          "id": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
          "defName": "整数",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "INT",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "INT",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "INT",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "INTEGER",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "INT",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "INTEGER",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "INTEGER",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "INT4",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "INT",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "INTEGER",
          "797A1496-D649-4261-89B4-544132EC3F36": "Integer",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Integer",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Integer",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "float",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "int",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "*int",
          "BDF457FD-9F98-4AC3-A705-7587B00A3BAB": "i32"
        },
        {
          "defKey": "date",
          "id": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
          "defName": "日期",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "DATETIME",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "DATE",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "DATETIME",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "TIMESTAMP",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "DATE",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "DATE",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "DATE",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "DATE",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "DATETIME",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "NUMERIC",
          "797A1496-D649-4261-89B4-544132EC3F36": "Date",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Date",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Date",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "DateTime",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "timestamp",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "*time.Time",
          "BDF457FD-9F98-4AC3-A705-7587B00A3BAB": "DateTime<Local>"
        },
        {
          "defKey": "bytes",
          "id": "D516E75B-90F5-4741-B9B3-A186A263F04C",
          "defName": "二进制",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "BLOB",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "BLOB",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "VARBINARY",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "BYTEA",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "BLOB",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "BLOB",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "BYTEA",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "BYTEA",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "BINARY",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "NONE",
          "797A1496-D649-4261-89B4-544132EC3F36": "byte[]",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "byte[]",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "byte[]",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "binary",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "binary",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "[]byte"
        },
        {
          "defKey": "largeText",
          "id": "B17BDED3-085F-40E1-9019-3B79CF2BF075",
          "defName": "大文本",
          "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "TEXT",
          "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "CLOB",
          "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "TEXT",
          "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "TEXT",
          "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "CLOB",
          "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "CLOB",
          "592C7013-143D-4E7B-AF64-0D7BF1E28230": "TEXT",
          "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "TEXT",
          "11D1FB71-A587-4217-89BA-611B8A1F83E0": "STRING",
          "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "TEXT",
          "797A1496-D649-4261-89B4-544132EC3F36": "String",
          "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "String",
          "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "String",
          "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "string",
          "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "string",
          "B91D99E0-9B7C-416C-8737-B760957DAF09": "string",
          "BDF457FD-9F98-4AC3-A705-7587B00A3BAB": "String"
        },
        {
          "defKey": "integer",
          "defName": "整数"
        },
        {
          "defKey": "long",
          "defName": "大整数"
        }
      ]
    },
    "domains": [
      {
        "defKey": "DefaultString",
        "defName": "默认字串",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 255,
        "scale": "",
        "uiHint": "",
        "id": "9092C4E0-1A54-4859-ABBB-5B62DBC27573"
      },
      {
        "defKey": "IdOrKey",
        "defName": "主键标识",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 32,
        "scale": "",
        "uiHint": "",
        "id": "16120F75-6AA7-4483-868D-F07F511BB081"
      },
      {
        "defKey": "Name",
        "defName": "名称",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 90,
        "scale": "",
        "uiHint": "",
        "id": "54611CCC-CA4B-42E1-9F32-4944C85B85A6"
      },
      {
        "defKey": "Int",
        "defName": "整数",
        "applyFor": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
        "len": "",
        "scale": "",
        "uiHint": "",
        "id": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E"
      },
      {
        "defKey": "Double",
        "defName": "小数",
        "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
        "len": 24,
        "scale": 6,
        "uiHint": "",
        "id": "FF4459C5-6B45-4DBF-8FC0-E06239BC05B4"
      },
      {
        "defKey": "Money",
        "defName": "金额",
        "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
        "len": 24,
        "scale": 6,
        "uiHint": "",
        "id": "C3B1681B-99F9-4818-9E80-DE1652A51D85"
      },
      {
        "defKey": "DateTime",
        "defName": "日期时间",
        "applyFor": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
        "len": "",
        "scale": "",
        "uiHint": "",
        "id": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC"
      },
      {
        "defKey": "YesNo",
        "defName": "是否",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": "1",
        "scale": "",
        "uiHint": "",
        "id": "6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF"
      },
      {
        "defKey": "Dict",
        "defName": "数据字典",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": "32",
        "scale": "",
        "uiHint": "",
        "id": "73FD2BAD-2358-4336-B96D-45DC897BD792"
      },
      {
        "defKey": "DescText",
        "defName": "描述文本",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": "900",
        "scale": "",
        "uiHint": "",
        "id": "3E948CEC-3070-472C-AF92-F3CA11EC9D15"
      },
      {
        "defKey": "LongKey",
        "defName": "标识号-长_LongKey",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 64,
        "scale": "",
        "id": "B42A7821-D390-4676-8C1B-22163E0C61DC"
      },
      {
        "defKey": "Intro",
        "defName": "备注说明_Intro",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 512,
        "scale": "",
        "id": "BA367B7E-E3B3-4531-917F-391FD0B7DFD0"
      },
      {
        "defKey": "ShortString",
        "defName": "字串-短_ShortString",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 128,
        "scale": "",
        "id": "255BF709-24F0-4D3B-BA88-1D59E0F92412"
      },
      {
        "defKey": "MiddleString",
        "defName": "字串-中_MiddleString",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 1024,
        "scale": "",
        "id": "7EFC4192-83B4-46FA-8C86-442612A2CA30"
      },
      {
        "defKey": "LongString",
        "defName": "字串-长_LongString",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 2,
        "scale": "",
        "id": "561179EE-F6CB-412C-A18A-FB69D7980987"
      },
      {
        "defKey": "LongText",
        "defName": "大文本_LongText",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": "",
        "scale": "",
        "id": "459F8196-201B-46F9-899D-29ECA475BA16"
      },
      {
        "defKey": "Ratio",
        "defName": "比例_Ratio",
        "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
        "len": 4,
        "scale": 2,
        "id": "B675F23D-D9B6-49EF-9E02-DA9CD16A17DD"
      },
      {
        "defKey": "Integer",
        "defName": "整数_Integer",
        "applyFor": "8B643161-9B32-404C-B169-DE9FDC36FA69",
        "len": "",
        "scale": "",
        "id": "47BD69CD-9964-4EB9-BCAC-6ED8728312C8"
      },
      {
        "defKey": "BigInt",
        "defName": "大整数_BigInt",
        "applyFor": "8BC051C3-A1CA-425C-B34F-2A5C4C61DC42",
        "len": "",
        "scale": "",
        "id": "B2149155-9592-4E42-9528-F9774C0E7A00"
      },
      {
        "defKey": "Date",
        "defName": "日期_Date",
        "applyFor": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
        "len": "",
        "scale": "",
        "id": "2FD91618-E6CB-4C11-83AA-A05C82359B6B"
      },
      {
        "defKey": "Char",
        "defName": "单字符_Char",
        "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "len": 1,
        "scale": "",
        "id": "43D66CFC-B7DD-4CDC-9C7A-E014E17AC6A6"
      },
      {
        "defKey": "折扣力度",
        "defName": "折扣力度_折扣力度",
        "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
        "len": 3,
        "scale": 2,
        "id": "05D9BAB6-3CDF-4143-8E56-760E4A3CC696"
      }
    ],
    "diagrams": [
      {
        "defKey": "foodie-shop-GRAPH-CANVAS",
        "defName": "天天吃货-关系图",
        "canvasData": {
          "cells": [
            {
              "id": "7a3c6295",
              "shape": "table",
              "position": {
                "x": 280,
                "y": 210
              },
              "originKey": "F7469048-33B5-4383-94BF-DF01CE7B4102",
              "count": 0
            },
            {
              "id": "f06be02d",
              "shape": "table",
              "position": {
                "x": 790,
                "y": 110
              },
              "originKey": "04B806AD-F55C-40DB-BDC6-5877B16B4AB8",
              "count": 0
            }
          ]
        },
        "id": "A4B0DDDD-DF02-4536-9CA5-EE593ADF5CB5"
      },
      {
        "defKey": "all-in-one",
        "defName": "",
        "relationType": "entity",
        "canvasData": {
          "cells": []
        },
        "id": "B19F6A71-30F0-40BD-BA9B-5DE469C33A11"
      }
    ],
    "standardFields": [
      {
        "defKey": "personInfo",
        "defName": "个人基本信息要素",
        "fields": [
          {
            "defKey": "ID_CARD_NO",
            "defName": "身份证号",
            "comment": "",
            "type": "VARCHAR",
            "len": "60",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "refDict": "",
            "uiHint": "",
            "id": "A64A91C8-A41F-4113-92FB-7563D7EF054D"
          },
          {
            "defKey": "MOBILE_PHONE",
            "defName": "手机号",
            "comment": "",
            "type": "VARCHAR",
            "len": "60",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "refDict": "",
            "uiHint": "",
            "id": "479DA2AB-1974-411A-A81E-92FB939E75EB"
          },
          {
            "defKey": "GENDER",
            "defName": "性别",
            "comment": "",
            "type": "VARCHAR",
            "len": "32",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
            "refDict": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D",
            "uiHint": "",
            "id": "48473E29-6594-4912-AADE-C8AB44FCA3E9"
          },
          {
            "defKey": "BIRTH",
            "defName": "出生日期",
            "comment": "",
            "type": "DATETIME",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
            "refDict": "",
            "uiHint": "",
            "id": "2BD3D2EE-2411-49A6-983D-84B81057312F"
          },
          {
            "defKey": "AVATAR",
            "defName": "头像",
            "comment": "",
            "type": "VARCHAR",
            "len": "60",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "refDict": "",
            "uiHint": "",
            "id": "FDD67CEE-4B52-4BD1-A1A3-9C5EBC6037E6"
          },
          {
            "defKey": "HEIGHT",
            "defName": "身高",
            "comment": "",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "refDict": "",
            "uiHint": "",
            "id": "CAAA0E79-41A1-4758-B481-D171168C4D68"
          },
          {
            "defKey": "WEIGHT",
            "defName": "体重",
            "comment": "",
            "type": "INT",
            "len": "",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
            "refDict": "",
            "uiHint": "",
            "id": "575482CE-64A6-4CB9-99DC-8E126D190AAA"
          },
          {
            "defKey": "NATION",
            "defName": "名族",
            "comment": "",
            "type": "VARCHAR",
            "len": "32",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
            "refDict": "115EDEFC-0323-410E-81AB-CCAB8879837A",
            "uiHint": "",
            "id": "15B0D75D-0B97-4985-A816-D0EAFA90446B"
          },
          {
            "defKey": "POLITICAL",
            "defName": "政治面貌",
            "comment": "",
            "type": "VARCHAR",
            "len": "32",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
            "refDict": "06EED564-BBA9-4747-8D73-AF809A330CB8",
            "uiHint": "",
            "id": "F458E86D-84D6-45A1-9DD3-51E6C8170D7F"
          },
          {
            "defKey": "MARITAL",
            "defName": "婚姻状况",
            "comment": "",
            "type": "VARCHAR",
            "len": "32",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
            "refDict": "EA1587B7-3954-437A-BFE0-FCB0453BCABA",
            "uiHint": "",
            "id": "7275E578-6893-4922-AC69-95B261BFBD61"
          },
          {
            "defKey": "DOMICILE_PLACE_PROVINCE",
            "defName": "籍贯（省）",
            "comment": "",
            "type": "VARCHAR",
            "len": "60",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "refDict": "",
            "uiHint": "",
            "id": "F04BF130-3EC1-4E02-9DED-3214CA88E352"
          },
          {
            "defKey": "DOMICILE_PLACE_CITY",
            "defName": "籍贯（市）",
            "comment": "",
            "type": "VARCHAR",
            "len": "32",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
            "refDict": "",
            "uiHint": "",
            "id": "B97F5BC2-33DE-4857-9DB8-ECFD02C9040C"
          },
          {
            "defKey": "DOMICILE_PLACE_ADDRESS",
            "defName": "户籍地址",
            "comment": "",
            "type": "VARCHAR",
            "len": "60",
            "scale": "",
            "primaryKey": false,
            "notNull": false,
            "autoIncrement": false,
            "defaultValue": "",
            "hideInGraph": false,
            "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
            "refDict": "",
            "uiHint": "",
            "id": "812ADF1D-8C03-40CA-B030-E539838FB889"
          }
        ],
        "id": "F30202B9-4B5D-4CE7-87CE-B3890C84D3F2"
      }
    ],
    "dbConn": [
      {
        "defKey": "D4843C6A-F7EC-480D-A8DB-4F6655F65F92",
        "defName": "local-mysql",
        "type": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
        "properties": {
          "driver_class_name": "com.mysql.cj.jdbc.Driver",
          "url": "jdbc:mysql://127.0.0.1:3306/foodie_dev?useunicode=true&characterencoding=utf-8&zerodatetimebehavior=converttonull&autoreconnect=true&usessl=false&servertimezone=asia/shanghai",
          "password": "mysql",
          "username": "root"
        }
      }
    ]
  }
}